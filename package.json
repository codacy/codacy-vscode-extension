{
  "name": "codacy",
  "displayName": "Codacy",
  "description": "Official Codacy extension for Visual Studio Code",
  "icon": "resources/icons/extension-logo.png",
  "version": "0.0.1",
  "publisher": "codacy-app",
  "repository": {
    "type": "git",
    "url": "https://github.com/codacy/codacy-vscode-extension"
  },
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onFileSystem:pr",
    "onFileSystem:githubpr"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codacy-main",
          "title": "Codacy",
          "icon": "resources/icons/codacy-logo.svg"
        }
      ]
    },
    "views": {
      "codacy-main": [
        {
          "id": "codacy:login",
          "name": "Sign in to Codacy",
          "icon": "resources/icons/codacy-logo.svg",
          "when": "Codacy:RepositoryManagerStateContext == NeedsAuthentication"
        },
        {
          "id": "codacy:mcp",
          "name": "Codacy MCP Server",
          "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP",
          "icon": "$(gear)",
          "initialSize": 2
        },
        {
          "id": "codacy:prSummary",
          "name": "Pull request",
          "when": "Codacy:RepositoryManagerStateContext == Loaded && Codacy:PullRequestStateContext == Loaded",
          "icon": "$(git-pull-request)",
          "initialSize": 3
        },
        {
          "id": "codacy:pullRequests",
          "name": "Open pull requests",
          "when": "Codacy:RepositoryManagerStateContext == Loaded",
          "icon": "$(git-pull-request)",
          "initialSize": 3
        },
        {
          "id": "codacy:branchIssues",
          "name": "Issue Browser",
          "when": "Codacy:RepositoryManagerStateContext == Loaded && Codacy:BranchStateContext == OnAnalysedBranch",
          "icon": "$(bug)",
          "initialSize": 3
        },
        {
          "id": "codacy:statuses",
          "name": "Status",
          "icon": "$(library)",
          "when": "Codacy:RepositoryManagerStateContext == NoRepository || Codacy:RepositoryManagerStateContext == NoRemote || Codacy:RepositoryManagerStateContext == Initializing || (Codacy:RepositoryManagerStateContext == Loaded && Codacy:PullRequestStateContext == NoPullRequest)",
          "initialSize": 1
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codacy:login",
        "contents": "You have not yet signed in with Codacy\n[Sign in](command:codacy.signIn)",
        "when": "Codacy:RepositoryManagerStateContext == NeedsAuthentication"
      },
      {
        "view": "codacy:mcp",
        "contents": "Enable your AI Chat to talk to Codacy's Cloud API \n[Add Codacy MCP Server](command:codacy.configureMCP)",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && !codacy:mcpConfigured"
      },
      {
        "view": "codacy:mcp",
        "contents": "MCP Server is enabled\n[Reset MCP Server](command:codacy.configureMCP.reset)",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && codacy:mcpConfigured"
      },
      {
        "view": "codacy:statuses",
        "contents": "No repositories open.",
        "when": "Codacy:RepositoryManagerStateContext == NoRepository"
      },
      {
        "view": "codacy:statuses",
        "contents": "No remote repositories configured.",
        "when": "Codacy:RepositoryManagerStateContext == NoRemote"
      },
      {
        "view": "codacy:statuses",
        "contents": "Codacy is initializing...",
        "when": "Codacy:RepositoryManagerStateContext == Initializing"
      },
      {
        "view": "codacy:statuses",
        "contents": "No open pull request found.\n[Try again](command:codacy.pr.load)",
        "when": "Codacy:RepositoryManagerStateContext == Loaded && Codacy:PullRequestStateContext == NoPullRequest"
      }
    ],
    "commands": [
      {
        "command": "codacy.signIn",
        "title": "Sign in to Codacy",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext == NeedsAuthentication"
      },
      {
        "command": "codacy.signOut",
        "title": "Sign out from Codacy",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication"
      },
      {
        "command": "codacy.pr.load",
        "title": "Look for Pull Request",
        "category": "Codacy commands",
        "icon": "$(sync)",
        "when": "Codacy:RepositoryManagerStateContext == Loaded"
      },
      {
        "command": "codacy.pr.refresh",
        "title": "Refresh Pull Request",
        "category": "Codacy commands",
        "icon": "$(refresh)",
        "when": "Codacy:PullRequestStateContext == Loaded"
      },
      {
        "command": "codacy.pullRequests.refresh",
        "title": "Refresh Pull Requests",
        "category": "Codacy commands",
        "icon": "$(refresh)",
        "when": "Codacy:RepositoryManagerStateContext == Loaded"
      },
      {
        "command": "codacy.branchIssues.refresh",
        "title": "Refresh Branch Issues",
        "category": "Codacy commands",
        "icon": "$(refresh)",
        "when": "Codacy:RepositoryManagerStateContext == Loaded && Codacy:PullRequestStateContext == NoPullRequest"
      },
      {
        "command": "codacy.pr.openSummary",
        "title": "Open Pull Request Summary",
        "category": "Codacy commands",
        "when": "Codacy:PullRequestStateContext == Loaded"
      },
      {
        "command": "codacy.pr.checkout",
        "title": "Checkout Pull Request",
        "category": "Codacy commands",
        "icon": "$(arrow-right)"
      },
      {
        "command": "codacy.pr.toggleCoverage",
        "title": "Toggle inline coverage",
        "category": "Codacy commands",
        "icon": "resources/icons/coverage-inline-on.png"
      },
      {
        "command": "codacy.pullRequests.open",
        "title": "Open Pull Requests",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext == Loaded"
      },
      {
        "command": "codacy.branchIssues.open",
        "title": "Open Issues",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext == Loaded && Codacy:PullRequestStateContext == NoPullRequest"
      },
      {
        "command": "codacy.issue.seeDetails",
        "title": "See issue details",
        "category": "Codacy commands"
      },
      {
        "command": "codacy.configureMCP",
        "title": "Configure Codacy MCP Server",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && !codacy:mcpConfigured"
      },
      {
        "command": "codacy.configureMCP.reset",
        "title": "Reset Codacy MCP Server",
        "category": "Codacy commands",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && codacy:mcpConfigured"
      },
      {
        "command": "codacy.configureMCP",
        "title": "Configure Codacy MCP Server",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && !codacy:mcpConfigured"
      },
      {
        "command": "codacy.configureMCP.reset",
        "title": "Reset Codacy MCP Server configuration",
        "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && !codacy:mcpConfigured"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "codacy.pr.load",
          "when": "Codacy:RepositoryManagerStateContext == Loaded"
        },
        {
          "command": "codacy.pr.refresh",
          "when": "Codacy:PullRequestStateContext == Loaded"
        },
        {
          "command": "codacy.pr.checkout",
          "when": "false"
        },
        {
          "command": "codacy.configureMCP",
          "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && !codacy:mcpConfigured"
        },
        {
          "command": "codacy.configureMCP.reset",
          "when": "Codacy:RepositoryManagerStateContext != NeedsAuthentication && codacy:supportsMCP && codacy:mcpConfigured"
        }
      ],
      "view/title": [
        {
          "command": "codacy.pr.load",
          "when": "view == codacy:statuses",
          "group": "navigation"
        },
        {
          "command": "codacy.pr.refresh",
          "when": "view == codacy:prSummary",
          "group": "navigation"
        },
        {
          "command": "codacy.pullRequests.refresh",
          "when": "view == codacy:pullRequests",
          "group": "navigation"
        },
        {
          "command": "codacy.branchIssues.refresh",
          "when": "view == codacy:branchIssues",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codacy.pr.checkout",
          "when": "view == codacy:pullRequests && viewItem =~ /pullRequest/",
          "group": "pullRequest@1"
        },
        {
          "command": "codacy.pr.checkout",
          "when": "view == codacy:pullRequests && viewItem =~ /pullRequest/",
          "group": "inline"
        },
        {
          "command": "codacy.pr.toggleCoverage",
          "when": "view == codacy:prSummary && viewItem =~ /toggleCoverage/ ",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Codacy",
      "properties": {
        "codacy.apiToken": {
          "type": "string",
          "description": "API Personal Token"
        }
      }
    },
    "permissions": [
      "git"
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "compile-tests": "tsc -p . --outDir out",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "package-visx": "vsce package --out releases",
    "lint": "eslint src --ext ts",
    "pretest": "npm run compile-tests && npm run lint",
    "test": "node ./out/test/runTest.js",
    "test:coverage": "c8 npm run test",
    "fetch-api": "curl https://artifacts.codacy.com/api/codacy-api/33.57.4/apiv3.yaml -o ./api-v3/api-swagger.yaml",
    "generate-api": "rm -rf ./src/api/client && openapi --input ./api-v3/api-swagger.yaml --output ./src/api/client --useUnionTypes --indent 2 --client axios",
    "update-api": "npm run fetch-api && npm run generate-api",
    "postinstall": "npm run update-api",
    "check-types": "tsc --noEmit"
  },
  "devDependencies": {
    "@codacy/openapi-typescript-codegen": "^0.0.2",
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.196",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.4.7",
    "@types/sinon": "^10.0.16",
    "@types/temp": "^0.9.1",
    "@types/vscode": "^1.81.0",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.2.1",
    "@vscode/test-electron": "^2.3.4",
    "@vscode/vsce": "^2.20.1",
    "c8": "^8.0.1",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^8.10.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "prettier": "^3.0.1",
    "remark": "^14.0.3",
    "sinon": "^15.2.0",
    "temp": "^0.9.4",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.6",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "@segment/analytics-node": "^1.1.3",
    "@types/sarif": "2.1.7",
    "axios": "^1.7.4",
    "date-fns": "^2.30.0",
    "form-data": "^4.0.0",
    "lodash": "^4.17.21"
  }
}
